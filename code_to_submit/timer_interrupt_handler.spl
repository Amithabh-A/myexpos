// code : Timer interrupt handler

// change stack from user to kernel(using process table)
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 11]*512 - 1;

backup;

//get current pid.
alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE+1];

// Set state of current process as READY
alias process_table_entry R1;
[PROCESS_TABLE + currentPID * 16 + 4] = READY;

//calling scheduler. 
call SCHEDULER;

//restore user context from kernel stack and set SP to user stack.
restore;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 13];

ireturn;
